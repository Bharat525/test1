{"version":3,"sources":["components/Nav.js","components/Aside.js","components/Main-content.js","App.js","reportWebVitals.js","index.js"],"names":["NavStyled","styled","div","Nav","AsideStyled","Aside","toggle","setToggle","className","onClick","console","log","MainStyled","MainContent","setInput","input","onChange","e","target","value","arrayInput","split","placeholder","type","map","App","useState","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"mMAUMA,EAAYC,IAAOC,IAAV,sUAsBAC,EA9BH,WACV,OACE,cAACH,EAAD,UACE,2CCkBAI,EAAcH,IAAOC,IAAV,2kBAyCFG,EA9DD,SAAC,GAA2B,IAAzBC,EAAwB,EAAxBA,OAAQC,EAAgB,EAAhBA,UAWvB,OACE,eAACH,EAAD,CAAaI,UAAS,gBAAWF,EAAS,cAAgB,IAA1D,UACE,uCACA,wBAAQG,QAbU,WAElBF,GAAWD,GAKbI,QAAQC,IAAIL,IAMsBE,UAAU,MAA1C,uBCWAI,EAAaX,IAAOC,IAAV,moCAkEDW,EA3FK,SAAC,GAAiC,IAA/BP,EAA8B,EAA9BA,OAAQQ,EAAsB,EAAtBA,SAAUC,EAAY,EAAZA,MAQvC,OACE,eAACH,EAAD,CAAYJ,UAAS,uBAAkBF,EAAS,aAAe,IAA/D,UACE,uBAAOU,SATU,SAACC,GACpBP,QAAQC,IAAIM,EAAEC,OAAOC,OACrB,IAAIC,EAAaH,EAAEC,OAAOC,MAAME,MAAM,IACtCX,QAAQC,IAAIS,GACZN,EAASM,IAKwBE,YAAY,YAAYC,KAAK,SAE5D,qBAAKf,UAAU,mBAAf,SACGO,EAAMS,KAAI,SAACP,GACV,OACE,qBAAKT,UAAU,OAAf,SACE,mCAAMS,EAAN,kBCOd,IAAML,EAAaX,IAAOC,IAAV,yNAcDuB,EA9Bf,WACE,MAA4BC,oBAAS,GAArC,mBAAOpB,EAAP,KAAeC,EAAf,KACA,EAA0BmB,mBAAS,IAAnC,mBAAOX,EAAP,KAAcD,EAAd,KAEA,OACE,sBAAKN,UAAU,MAAf,UACE,cAAC,EAAD,IAEA,eAAC,EAAD,CAAYA,UAAU,iBAAtB,UACE,cAAC,EAAD,CAAOD,UAAWA,EAAWD,OAAQA,IACrC,cAAC,EAAD,CAAaA,OAAQA,EAAQS,MAAOA,EAAOD,SAAUA,WCP9Ca,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,O,MCCdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.c41be6f5.chunk.js","sourcesContent":["import styled from \"styled-components\";\r\n\r\nconst Nav = () => {\r\n  return (\r\n    <NavStyled>\r\n      <h1>Navbar</h1>\r\n    </NavStyled>\r\n  );\r\n};\r\n\r\nconst NavStyled = styled.div`\r\n  background-color: #eb6b40;\r\n  height: 10vh;\r\n  text-align: center;\r\n  position: fixed;\r\n  top: 0;\r\n  z-index: 2;\r\n  width: 100%;\r\n  h1 {\r\n    color: white;\r\n    padding-top: 16px;\r\n  }\r\n\r\n  @media screen and (max-width: 768px) {\r\n    height: 8vh;\r\n\r\n    h1 {\r\n      font-size: 1rem;\r\n    }\r\n  }\r\n`;\r\n\r\nexport default Nav;\r\n","import styled from \"styled-components\";\r\n\r\nconst Aside = ({ toggle, setToggle }) => {\r\n  const toggleHandler = () => {\r\n    if (toggle) {\r\n      setToggle(!toggle);\r\n    } else {\r\n      setToggle(!toggle);\r\n    }\r\n\r\n    console.log(toggle);\r\n  };\r\n\r\n  return (\r\n    <AsideStyled className={`aside ${toggle ? \"aside_small\" : \"\"}`}>\r\n      <h2>Aside</h2>\r\n      <button onClick={toggleHandler} className=\"btn\">\r\n        Click\r\n      </button>\r\n    </AsideStyled>\r\n  );\r\n};\r\n\r\nconst AsideStyled = styled.div`\r\n  height: 100%;\r\n  width: 20%;\r\n  background-color: #eb6b40;\r\n  position: relative;\r\n\r\n\r\n\r\n\r\n  h2 {\r\n    padding-top: 3rem;\r\n    text-align: center;\r\n  }\r\n  button {\r\n    position: absolute;\r\n    left: 100%;\r\n    transform: translate(-50%);\r\n    outline: none;\r\n    border: none;\r\n    border-radius: 50%;\r\n    height: 50px;\r\n    width: 50px;\r\n    cursor: pointer;\r\n    box-shadow: rgba(0, 0, 0, 0.35) 0px 5px 15px;\r\n  }\r\n\r\n\r\n  .aside_small {\r\n    width:5%;\r\n  }\r\n\r\n\r\n  @media screen and (max-width: 768px) {\r\n\r\n    h2{\r\n        font-size:1rem;\r\n    }\r\n  }\r\n\r\n`;\r\n\r\nexport default Aside;\r\n","import styled from \"styled-components\";\r\n\r\nconst MainContent = ({ toggle, setInput, input }) => {\r\n  const inputHandler = (e) => {\r\n    console.log(e.target.value);\r\n    let arrayInput = e.target.value.split(\"\");\r\n    console.log(arrayInput);\r\n    setInput(arrayInput);\r\n  };\r\n\r\n  return (\r\n    <MainStyled className={`main-content ${toggle ? \"main_large\" : \"\"}`}>\r\n      <input onChange={inputHandler} placeholder=\"Type here\" type=\"text\" />\r\n\r\n      <div className=\"iteams-container\">\r\n        {input.map((e) => {\r\n          return (\r\n            <div className=\"item\">\r\n              <h1> {e} </h1>\r\n            </div>\r\n          );\r\n        })} \r\n      </div>\r\n    </MainStyled>\r\n  );\r\n};\r\n\r\nconst MainStyled = styled.div`\r\n  height: 90vh;\r\n  width: 100%;\r\n\r\n  input {\r\n    margin-top: 4rem;\r\n    display: block;\r\n    width: 20%;\r\n    padding: 0.8rem 0.8rem 0.8rem 0rem;\r\n    border: none;\r\n    position: relative;\r\n    left: 50px;\r\n    border-bottom: 2px solid black;\r\n    color: grey;\r\n    font-size: 1.2rem;\r\n    outline: none;\r\n  }\r\n\r\n  .iteams-container {\r\n    width: 92%;\r\n    margin: auto;\r\n    display: flex;\r\n    flex-wrap: wrap;\r\n    height: 100%;\r\n    overflow-y:scroll;\r\n    overflow-x:hidden;\r\n\r\n    .item {\r\n      margin: 10px;\r\n      height: 100px;\r\n      width: 100px;\r\n      background-color: grey;\r\n      color: black;\r\n      text-align: center;\r\n      display: flex;\r\n      align-items: center;\r\n      justify-content: center;\r\n\r\n      h1 {\r\n        text-transform: uppercase;\r\n        font-size: 4rem;\r\n        text-align: center;\r\n        color: white;\r\n      }\r\n\r\n      :nth-child(3n + 3) {\r\n        background-color: #676788;\r\n      }\r\n    }\r\n  }\r\n\r\n  .main_large {\r\n    width: 95%;\r\n  }\r\n\r\n  @media (max-width: 768px) {\r\n    input {\r\n      width: 60%;\r\n    }\r\n\r\n    .iteams-container .item {\r\n      display: none;\r\n    }\r\n  }\r\n`;\r\n\r\nexport default MainContent;\r\n","// IMPORT COMPONENTS\r\n\r\nimport Nav from \"./components/Nav\";\r\nimport Aside from \"./components/Aside\";\r\nimport MainContent from \"./components/Main-content\";\r\n\r\nimport styled from \"styled-components\";\r\nimport { useState } from \"react\";\r\n\r\nfunction App() {\r\n  const [toggle, setToggle] = useState(false);\r\n  const [input, setInput] = useState([]);\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <Nav />\r\n\r\n      <MainStyled className=\"main-container\">\r\n        <Aside setToggle={setToggle} toggle={toggle} />\r\n        <MainContent toggle={toggle} input={input} setInput={setInput} />\r\n      </MainStyled>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst MainStyled = styled.div`\r\n  margin-top: 4rem;\r\n  display: flex;\r\n  height: 100vh;\r\n  width: 100vw;\r\n\r\n  color: white;\r\n  transition: 1s ease;\r\n\r\n  @media screen and (max-width: 768px) {\r\n    margin-top: 3rem;\r\n  }\r\n`;\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nimport \"./styles/App.scss\"\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}